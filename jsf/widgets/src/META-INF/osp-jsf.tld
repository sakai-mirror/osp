<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE taglib
  PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
  "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">

<taglib>

  <tlib-version>1.9</tlib-version>
  <jsp-version>1.2</jsp-version>
  <short-name>osp</short-name>
  <uri>http://www.theospi.org/jsf/osp</uri>
  <description><![CDATA[
  
    This tag library contains OSP 2.1 JavaServer Faces
    component tags for creating user interface elements specified in the
    <a href="http://portfolios.itd.depaul.edu/ospi/Prototypes/OSPGuidePrototypes.htm" target="_blank">OSP Prototypes</a>.
    
    A primary goal is to not have any actual html.
   
    <style>
      span.tag {  color: #008000;      }
      span.param  {  color: #800080;      }
      span.value  {  color: #000080;      }
    </style>
    
  ]]></description>
  
  <tag>
    <name>xheader</name>
    <tag-class>org.theospi.jsf.tag.XHeaderTag</tag-class>
    <body-content>JSP</body-content>
    <description><![CDATA[
    
       An e(x)pandable header.  This tag renders a bar across the defined area.
       
       <br><br>
       <span class="tag">&lt;ospx:xheader</span>
         <span="param">rendered</span> = <span class="value">"true/false"</span>&gt;<br>
         &nbsp; &nbsp; &nbsp; &nbsp; This inner text is what goes into the under area.<br>
       <span class="tag">&lt;/ospx:xheader&gt</span>
       
    ]]></description>
    
    
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
          
        <br><br>
        Default: true;
        
      ]]></description>
    </attribute>

     <attribute>
       <name>id</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description><![CDATA[

          the id of the header

       ]]></description>
     </attribute>
  </tag>
  
  <tag>
    <name>xheadertitle</name>
    <tag-class>org.theospi.jsf.tag.XHeaderTitleTag</tag-class>
    <body-content>JSP</body-content>
    <description><![CDATA[
    
       An e(x)pandable header title
       
       <br><br>
       <span class="tag">&lt;ospx:xheadertitle</span>
         <span="param">id</span> = <span class="value">"titleAreaId"</span>
         <span="param">cssclass</span> = <span class="value">"titleCssClass"</span>
         <span="param">rendered</span> = <span class="value">"true/false"</span>&gt;<br>
         &nbsp; &nbsp; &nbsp; &nbsp; This inner text is what goes into the title<br>
       <span class="tag">&lt;/ospx:xheadertitle&gt</span>
       
    ]]></description>

    <attribute>
      <name>cssclass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
         css class for the title bar.  This defaults to "xheader" style class
         
      ]]></description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
         the id of the title area
         
      ]]></description>
    </attribute>


     <attribute>
       <name>rendered</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description><![CDATA[

         Flag indicating whether or not this component should be rendered
           (during Render Response Phase), or processed on any subsequent
           form submit.

         <br><br>
         Default: true;

       ]]></description>
     </attribute>

     <attribute>
       <name>value</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description><![CDATA[

         The title of the header.  This title will be clickable.  Anything
         under the header will be not be in the clickable area.

       ]]></description>
     </attribute>

  </tag>
  
  <tag>
    <name>xheaderdrawer</name>
    <tag-class>org.theospi.jsf.tag.XHeaderDrawerTag</tag-class>
    <body-content>JSP</body-content>
    <description><![CDATA[
    
       An e(x)pandable header drawer, the area that is expandable
       
       <br><br>
       <span class="tag">&lt;ospx:xheader</span>
         <span="param">initiallyexpanded</span> = <span class="value">"true/false/yes/no"</span>
         <span="param">id</span> = <span class="value">"UnderAreaId"</span>
         <span="param">cssclass</span> = <span class="value">"underAreaClass"</span>
         <span="param">rendered</span> = <span class="value">"true/false"</span>&gt;<br>
         &nbsp; &nbsp; &nbsp; &nbsp; This inner text is what goes into the under area.<br>
       <span class="tag">&lt;/ospx:xheader&gt</span>
       
    ]]></description>
    
    
    <attribute>
      <name>initiallyexpanded</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
         tell the drawer to be initially open.  by default it is closed when not specified
        
      ]]></description>
    </attribute>
    
    
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        id of the drawer
        
      ]]></description>
    </attribute>
    
    
    <attribute>
      <name>cssclass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        the css class that the drawer receives
        
      ]]></description>
    </attribute>
    
    
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
          
        <br><br>
        Default: true;
        
      ]]></description>
    </attribute>
    
  </tag>
  
  
  
  
  <tag>
    <name>scrollablearea</name>
    <tag-class>org.theospi.jsf.tag.ScrollableAreaTag</tag-class>
    <body-content>JSP</body-content>
    <description><![CDATA[
    
       An e(x)pandable header.  This tag renders a bar across the defined area.  The innerHTML gets
       placed into the the under area.  There can also be (tbd) button tags in the innerHTML which are placed next to the 
       right hand side of the bar.<br><br>
       
       There is javascript associated with this tag to open and close the under area.
       
       <br><br>
       
       the top, left, right, and bottom are the binding to the containing area.  
       These default to 0px thus expanding the scroll area to the containing element.
       If height or width are set, then the respective axis right or bottom 
          will be ignored.
       
       <br><br>
       <span class="tag">&lt;ospx:scrollableArea</span> 
         <span="param">id</span> = <span class="value">"theDivID</span>
         <span="param">width</span> = <span class="value">"200px"</span>
         <span="param">height</span> = <span class="value">"95%"</span>
         <span="param">cssclass</span> = <span class="value">"cssClass"</span>
         <span="param">rendered</span> = <span class="value">"true/false"</span>&gt;<br>
         &nbsp; &nbsp; &nbsp; &nbsp; This inner text is what goes into the scrollable area.<br>
       <span class="tag">&lt;/ospx:scrollableArea&gt</span>
       
     ]]></description>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
         The title of the bar
         
      ]]></description>
    </attribute>

    <attribute>
      <name>width</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
         The width of the scroll area.  This should be in "px" or percentage.
         
      ]]></description>
    </attribute>

    <attribute>
      <name>height</name>
      <required>true</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
         The height of the scroll area, required.  This should be in "px" or percentage.
         
      ]]></description>
    </attribute>

    <attribute>
      <name>cssclass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
         This is the class that the scroll area gets
         
      ]]></description>
    </attribute>
    
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
          
      ]]></description>
    </attribute>
  </tag>
  
  
  
  
  
  <tag>
    <name>splitarea</name>
    <tag-class>org.theospi.jsf.tag.SplitAreaTag</tag-class>
    <body-content>JSP</body-content>
    <description><![CDATA[
    
      this is to divide an area in two.
      there needs to be attributes that define a border per side for structure
      <br><br>
       <span class="tag">&lt;ospx:splitarea</span> 
         <span="param">direction</span> = <span class="value">"vertical/horizontal/x/y"</span>
         <span="param">width</span> = <span class="value">"500/95%"</span>
         <span="param">height</span> = <span class="value">"90%"</span>
         <span="param">rendered</span> = <span class="value">"true/false"</span>&gt;<br><br>
         
         &nbsp;  &nbsp; &nbsp; &nbsp;
           <span class="tag">&lt;ospx:splitsection</span> 
             <span="param">cssclass</span> = <span class="value">"cssClass"</span>
             <span="param">size</span> = <span class="value">"200/20%"</span>
             <span="param">id</span> = <span class="value">"wrapperId"</span>
             <span="param">rendered</span> = <span class="value">"true/false"</span>
           <span class="tag">&gt</span>
           This is the content of the cell
           <span class="tag">&lt;/ospx:splitsection</span><span class="tag">&gt</span><br>
           
             &nbsp;  &nbsp; &nbsp; &nbsp;
           <span class="tag">&lt;ospx:splitsection</span> 
             <span="param">cssclass</span> = <span class="value">"cssClass"</span>
             <span="param">size</span> = <span class="value">"200/20%"</span>
             <span="param">id</span> = <span class="value">"wrapperId"</span>
             <span="param">rendered</span> = <span class="value">"true/false"</span>
           <span class="tag">&gt</span>
           This is the content of the cell
           <span class="tag">&lt;/ospx:splitsection</span><span class="tag">&gt</span>
           <br><br>
           <span class="tag">&lt;/ospx:splitarea</span><span class="tag">&gt</span>
       
    ]]></description>

    <attribute>
      <name>direction</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
         tells which direction to be divided.
         "horizontal" splits the x axis in two by placing a vertical partition.
         "vertical" splits the y axis in two by placing a horizontal partition.
         
      ]]></description>
    </attribute>

    <attribute>
      <name>width</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
         the total width of the area
         
      ]]></description>
    </attribute>

    <attribute>
      <name>height</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
         the total height of the area
         
      ]]></description>
    </attribute>
    
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
          
      ]]></description>
    </attribute>
     <attribute>
       <name>id</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description><![CDATA[

          the id of the splitter

       ]]></description>
     </attribute>
  </tag>
  
  
  
  
  
   <tag>  
    <name>splitsection</name>  
    <tag-class>org.theospi.jsf.tag.SplitSectionTag</tag-class>  
    <body-content>JSP</body-content>
    <description><![CDATA[

         This places the divider in the split view.  This MUST be found only inside 
         the <ospx:splitarea> tag
      <br><br>
       <span class="tag">&lt;ospx:splitsection</span> 
         <span="param">cssclass</span> = <span class="value">"cssClass"</span>
         <span="param">size</span> = <span class="value">"200/20%"</span>
         <span="param">id</span> = <span class="value">"wrapperId"</span>
         <span="param">rendered</span> = <span class="value">"true/false"</span>
       <span class="tag">&gt</span>
       This is the content of the cell
       <span class="tag">&lt;/ospx:splitsection</span><span class="tag">&gt</span>
       
    ]]></description>

    <attribute>
      <name>cssclass</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[

         places this class into the section
 
      ]]></description>
    </attribute>

    <attribute>
      <name>size</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[

         This gives the section a specific size, dependent upon the 
         split area direction.  This takes a number in pixels or a percent.
 
      ]]></description>
    </attribute>

    <attribute>
      <name>align</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[

         This is a passthrough variable to the td.
 
      ]]></description>
    </attribute>

    <attribute>
      <name>valign</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[

         This is a passthrough variable to the td.
 
      ]]></description>
    </attribute>

    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[

         Specifies the id of the surrounding tag of each section
 
      ]]></description>
    </attribute>
    
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
          
      ]]></description>
    </attribute>
  </tag>
  
  
  
  
  
   <tag>  
    <name>tabArea</name>  
    <tag-class>org.theospi.jsf.tag.TabAreaTag</tag-class>  
    <body-content>JSP</body-content>  
    <description><![CDATA[
    
         This is to select between multiple related views. 
      <br><br>
       <span class="tag">&lt;ospx:tabarea</span> 
         <span="param">direction</span> = <span class="value">"vertical/horizontal"</span>
         <span="param">rendered</span> = <span class="value">"true false"</span>&gt;<br>
       &nbsp; &nbsp; &nbsp; &nbsp; 
       <span class="tag">&lt;ospx:tab</span> 
         <span="param">title</span> = <span class="value">"Tab Title"</span>
         <span="param">selected</span> = <span class="value">"true/false"</span>
         <span="param">disabled</span> = <span class="value">"true/false"</span>
         <span="param">id</span> = <span class="value">"TabID"</span> /&gt</span><br>
         &nbsp; &nbsp; &nbsp; &nbsp;  ...<br>
       <span class="tag">&lt;/ospx:tabarea&gt</span>
       
    ]]></description>  
  
    <attribute>
      <name>direction</name>  
      <required>false</required>  
      <rtexprvalue>false</rtexprvalue>  
      <description><![CDATA[
      
         vertical/horizontal  
         
      ]]></description>  
    </attribute>

    <attribute>
        <name>width</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
        <description>
            <![CDATA[

        the total width of the area.  the tabs plus the content
        
      ]]>
        </description>
    </attribute>

    <attribute>
        <name>height</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
        <description>
            <![CDATA[

        the total height of the area.  the tabs plus the content
        
      ]]>
        </description>
    </attribute>
    
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
          
      ]]></description>
    </attribute>
      <attribute>
        <name>id</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
        <description><![CDATA[

           the id of the area

        ]]></description>
      </attribute>
  </tag>
  
  
  
  
  
   <tag>  
    <name>tab</name>  
    <tag-class>org.theospi.jsf.tag.TabTag</tag-class>  
    <body-content>JSP</body-content>  
    <description><![CDATA[
    
       this will display a single tab
      <br><br>
       <span class="tag">&lt;ospx:tab</span> 
         <span="param">title</span> = <span class="value">"Tab Title"</span>
         <span="param">selected</span> = <span class="value">"true/false"</span>
         <span="param">disabled</span> = <span class="value">"true/false"</span>
         <span="param">id</span> = <span class="value">"TabID"</span> /&gt</span>
         
    ]]></description>
  
    <attribute>
      <name>title</name>  
      <required>false</required>  
      <rtexprvalue>false</rtexprvalue>  
      <description><![CDATA[

        the title of the tab
        
      ]]></description>  
    </attribute>

    <attribute>
        <name>cssclass</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
        <description>
            <![CDATA[

        this is the css class given to the buttons
        
      ]]>
        </description>
    </attribute>

    <attribute>
      <name>selected</name>  
      <required>false</required>  
      <rtexprvalue>false</rtexprvalue>  
      <description><![CDATA[

        this will indicate that this tab is selected
        
      ]]></description>  
    </attribute>
  
    <attribute>
      <name>disabled</name>  
      <required>false</required>  
      <rtexprvalue>false</rtexprvalue>  
      <description><![CDATA[
      
        this will disable the tag
        
      ]]></description>  
    </attribute>
    
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        The tab will get this id, if it is a button, then the name will
        also be this attributes value
        
      ]]></description>
    </attribute>
    
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
          
      ]]></description>
    </attribute>
  </tag>
  
  <tag>  
    <name>tabActionArea</name>  
    <tag-class>org.theospi.jsf.tag.TabActionAreaTag</tag-class>  
    <body-content>JSP</body-content>  
    <description><![CDATA[
    
       this will display a single tab
      <br><br>
       <span class="tag">&lt;ospx:tab</span> 
         <span="param">title</span> = <span class="value">"Tab Title"</span>
         <span="param">selected</span> = <span class="value">"true/false"</span>
         <span="param">disabled</span> = <span class="value">"true/false"</span>
         <span="param">id</span> = <span class="value">"TabID"</span> /&gt</span>
         
    ]]></description>
   
    <attribute>
      <name>disabled</name>  
      <required>false</required>  
      <rtexprvalue>false</rtexprvalue>  
      <description><![CDATA[
      
        this will disable the tag
        
      ]]></description>  
    </attribute>
    
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
          
      ]]></description>
    </attribute>
    
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        The tab will get this id, if it is a button, then the name will
        also be this attributes value
        
      ]]></description>
    </attribute>
  </tag>
  
  
  
  
  
  <tag>
   <name>wizardSteps</name>
   <tag-class>org.theospi.jsf.tag.WizardStepsTag</tag-class>
   <body-content>JSP</body-content>
   <description><![CDATA[
   
       Container tag for the wizard steps
      <br><br>
       <span class="tag">&lt;ospx:wizardSteps</span> 
         <span="param">id</span> = <span class="value">"componentID"</span>&gt;<br>
       
       <span class="tag">&lt;ospx:wizardStep</span> 
         <span="param">title</span> = <span class="value">"Tab Title"</span>
         <span="param">selected</span> = <span class="value">"true/false"</span>
         <span="param">disabled</span> = <span class="value">"true/false"</span>
         <span="param">id</span> = <span class="value">"TabID"</span> /&gt</span><br>
         &nbsp; &nbsp; &nbsp; &nbsp;  ...<br>
       <span class="tag">&lt;/ospx:wizardSteps&gt</span>
       
   ]]></description>
   <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Component id of this component.
        
      ]]></description>    
   </attribute>
   <attribute>
     <name>currentStep</name>
     <required>true</required>
     <rtexprvalue>false</rtexprvalue>
     <description><![CDATA[
      
        Zero-based index of the current step.
        
      ]]></description>
   </attribute>
  </tag>
  
  <tag>
   <name>wizardStep</name>
   <tag-class>org.theospi.jsf.tag.WizardStepTag</tag-class>
   <body-content>empty</body-content>
   <description><![CDATA[
   
      Wizard step.  Should be contained in an ospx:wizardSteps tag
      <br><br>
       <span class="tag">&lt;ospx:wizardStep</span> 
         <span="param">label</span> = <span class="value">"label of step"</span>
         <span="param">id</span> = <span class="value">"TabID"</span>
         <span class="tag">/&gt</span>
         
   ]]></description>
   <attribute>
      <name>label</name>
      <description><![CDATA[
      
         Text to be displayed
      
      ]]></description>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
   </attribute>
   <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Component id of this component.
        
      ]]></description>
    </attribute>
    <attribute>
      <name>rendered</name>
      <required>false</required>
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        Flag indicating whether or not this component should be rendered
          (during Render Response Phase), or processed on any subsequent
          form submit.
          
      ]]></description>
    </attribute>
        <attribute>
      <name>disabled</name>  
      <required>false</required>  
      <rtexprvalue>false</rtexprvalue>
      <description><![CDATA[
      
        this will disable the tag
        
      ]]></description>  
    </attribute>
  </tag>


   <tag>
     <name>inputRichText</name>
     <tag-class>org.theospi.jsf.tag.LinkListInputRichTextTag</tag-class>
     <body-content>JSP</body-content>
     <description>
       <![CDATA[
         Renders a WYSIWYG text editor and toolbar within an HTML "textarea" element.
         Allows the user to edit HTML formatted text.
         The textarea is decorated using the HTMLArea JavaScript library.
         The JavaScript widget is based on the open-source
       <a href="http://www.htmlarea.com/" target="_blank">HTMLArea</a> project.
       HTMLArea is copyright
       <a href="http://interactivetools.com" target="_blank">InteractiveTools.com</a>
       and <a href="http://dynarch.com" target="_blank">Dynarch.com</a> and it is released
       under a BSD-style license.
       <br />
       <br />
       HTMLArea was created and developed up to
       version 2.03 by InteractiveTools.com. Version 3.0 is a full rewrite,
       developed by <a href="http://www.bazon.net/mishoo/">Mihai Bazon</a>.
       It contains code sponsored by third-party
       companies as well. Please see our About Box for details about
       who sponsored what plugins.
       ]]>
     </description>

      <attribute>
        <name>value</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
        <description>
          The editable HTML displayed inside the textarea.
        </description>
      </attribute>

      <attribute>
        <name>attachedFiles</name>
        <required>false</required>
        <rtexprvalue>false</rtexprvalue>
        <description>
          A list of SelectItems or a Map of link to label strings that will be rendered as a list on the editor.
        </description>
      </attribute>

   <attribute>
     <name>cols</name>
     <required>false</required>
     <rtexprvalue>false</rtexprvalue>
     <description>
      Number of columns in the textarea (in character units).  Defaults to 80.
      Complements the the 'width' attribute.  Passes through to the HTML textarea element.
     </description>
   </attribute>

   <attribute>
     <name>rows</name>
     <required>false</required>
     <rtexprvalue>false</rtexprvalue>
     <description>
      Number of rows in the textarea (in character units).  Defaults to 15.
      Complements the 'height' attribute.  Passes through to the HTML textarea element.
     </description>
   </attribute>

     <attribute>
       <name>width</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
         Width of the widget (in pixel units).
         If this attribute is not specified, the width is controlled by the 'cols' attribute.
       </description>
     </attribute>

     <attribute>
       <name>height</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
         Height of the widget (in pixel units).
         If this attribute is not specified, the width is controlled by the 'rows' attribute.
       </description>
     </attribute>

     <attribute>
       <name>textareaOnly</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           If true, only the textarea will be rendered.  Defaults to false.
           If true, the rich text toolbar
           and external HTMLArea JavaScript will not be rendered.  Attributes that
           affect the textarea element will be rendered (for example style, styleClass).
           This widget is then rendered as just a plain-old textarea.
       </description>
     </attribute>

     <attribute>
       <name>buttonSet</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
         Select toolbar from among a number precanned lists of command buttons.
         Allowed values are: "none", "small", "medium", "large". (values tentative).
         Defaults to "medium", which has 2 rows of buttons.  For fine-grained
         control of which buttons are shown, use the buttonList attribute
         instead.  "small" has 1 row
         of buttons.  "large" has 3 rows of buttons, almost everything available.
         "none" has 0 rows of buttons, no buttons at all - The text is still editable;
         Keyboard shortcuts for formatting (like Ctrl-B for bold) still work.
       </description>
     </attribute>

     <attribute>
       <name>buttonList</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
         Comma delimited list of toolbar command buttons registered with
         component.  If not specified, will default to a defined list.
       </description>
     </attribute>

     <attribute>
       <name>javascriptLibraryExtensionURL</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
         URL to an external JavaScript file with additional
         JavaScript to execute beyond the default, for example
         extra command button definitions.  May be a relative URL.
         Default is nothing.
       </description>
     </attribute>

     <attribute>
       <name>javascriptLibraryURL</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
              The URL to the directory of the HTMLArea JavaScript library.
              This allows overriding the default HTMLArea JavaScript library
              that comes with this component.
              May be a relative URL.
       </description>
     </attribute>

     <attribute>
       <name>showXPath</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
         If true show XPath at bottom of editor.  Default is true.
       </description>
     </attribute>

     <attribute>
       <name>hideAble</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
         Show sub control allowing you to hide editor.
         Default is false.
       </description>
     </attribute>

     <attribute>
       <name>autoConfig</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
             ___TODO: This is here for legacy purposes - is it really necessary anymore?___
              Whether to recalculate the configuration - defaults to false.  If true,
              the width, height, and toolbar buttons will be recalculated based on
              the values given.
       </description>
     </attribute>

     <attribute>
       <name>binding</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
       </description>
     </attribute>

     <attribute>
       <name>converter</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Converter instance registered with this component.
       </description>
     </attribute>

     <attribute>
       <name>id</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           The component identifier for this component.  This value must be
           unique within the closest parent component that is a naming
           container.
       </description>
    </attribute>

    <attribute>
       <name>immediate</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Flag indicating that this component's value must be
           converted and validated immediately (that is, during
           Apply Request Values phase), rather than waiting
           until Process Validations phase.
       </description>
    </attribute>
    <attribute>
       <name>rendered</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Flag indicating whether or not this component should be rendered
           (during Render Response Phase), or processed on any subsequent
           form submit.
       </description>
     </attribute>
     <attribute>
       <name>required</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Flag indicating that the user is required to provide a submitted
           value for this input component.
       </description>
     </attribute>
     <attribute>
       <name>validator</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           MethodBinding representing a validator method that will be called
           during Process Validations to perform correctness checks on the
           value of this component.  The expression must evaluate to a public
           method that takes FacesContext, UIComponent, and Object parameters,
           with a return type of void.
       </description>
     </attribute>
     <attribute>
       <name>value</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           The current value of this component.
       </description>
     </attribute>
     <attribute>
       <name>valueChangeListener</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           MethodBinding representing a value change listener method that will be
           notified when a new value has been set for this input component.  The
           expression must evaluate to a public method that takes a
           ValueChangeEvent parameter, with a return type of void.
       </description>
     </attribute>
     <attribute>
       <name>accesskey</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Access key that, when pressed, transfers focus
           to this element.
       </description>
     </attribute>
     <attribute>
       <name>dir</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Direction indication for text that does not inherit directionality.
           Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).
       </description>
     </attribute>
     <attribute>
       <name>disabled</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Flag indicating that this element must never
           receive focus or be included in a subsequent
           submit.
       </description>
     </attribute>
     <attribute>
       <name>lang</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Code describing the language used in the generated markup
           for this component.
       </description>
     </attribute>
     <attribute>
       <name>readonly</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Flag indicating that this component will prohibit
           changes by the user.  The element may receive focus
           unless it has also been disabled.
       </description>
     </attribute>
     <attribute>
       <name>style</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           CSS style(s) to be applied to the underlying textarea when it is rendered.
       </description>
     </attribute>
     <attribute>
       <name>styleClass</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Space-separated list of CSS style class(es) to be applied when
           the underlying textarea is rendered.  This value must be passed through
           as the "class" attribute on generated markup.
       </description>
     </attribute>
     <attribute>
       <name>tabindex</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Position of the underlying textarea element in the tabbing order
           for the current document.  This value must be
           an integer between 0 and 32767.
       </description>
     </attribute>
     <attribute>
       <name>title</name>
       <required>false</required>
       <rtexprvalue>false</rtexprvalue>
       <description>
           Advisory title information about markup elements generated
           for this component.
       </description>
     </attribute>
   </tag>

</taglib
>